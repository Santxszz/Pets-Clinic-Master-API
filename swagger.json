{
  "openapi": "3.0.3",
  "info": {
    "title": "Pets Clinic 1.0",
    "description": "A REST API that manages the backend of a Pet Clinic application.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "tutors",
      "description": "Everything about registered tutors."
    },
    {
      "name": "tutor",
      "description": "Manage tutors."
    },
    {
      "name": "pet",
      "description": "Operations about pets"
    }
  ],
  "paths": {
    "/tutors": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "List all tutors.",
        "description": "This endpoint returns a **list of all tutors (users)** registered on the server.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tutors"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tutors"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/tutor": {
      "post": {
        "tags": [
          "tutor"
        ],
        "summary": "Create a new tutor",
        "description": "Inserts a new tutor into the server using the POST method.",
        "requestBody": {
          "description": "Request body to create a new tutor.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tutor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tutor created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tutor"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tutor"
                }
              }
            }
          },
          "400": {
            "description": "Invalid name or email || Input fields in the request body were not provided"
          },
          "default": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/tutor/{id}": {
      "put": {
        "tags": [
          "tutor"
        ],
        "summary": "Update a tutor's record using the ID as a parameter in the URI",
        "description": "This endpoint updates the registered data of a tutor by the ID provided in the URI path.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The tutor's ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Request body to update a tutor based on their ID in the URI path",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tutor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Input fields were not provided | Invalid name or email | The tutor's ID was not found in the database."
          },
          "default": {
            "description": "Unexpected error."
          }
        }
      },
      "delete": {
        "tags": [
          "tutor"
        ],
        "summary": "Delete a tutor based on the ID provided in the URI path",
        "description": "This endpoint deletes a specific record in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The tutor's ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted."
          },
          "400": {
            "description": "The tutor's ID was not found or does not exist."
          }
        }
      }
    },
    "/pet/{tutorId}": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Insert a pet assigned to a tutor.",
        "description": "This endpoint adds a pet and assigns it to a tutor.",
        "parameters": [
          {
            "name": "tutorId",
            "in": "path",
            "description": "The tutor's ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Request body to create a new pet.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created."
          },
          "400": {
            "description": "The provided tutor ID is invalid. | Input fields were not provided."
          }
        }
      }
    },
    "/pet/{petId}/tutor/{tutorId}": {
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "Update a pet's record assigned to a tutor.",
        "description": "This endpoint updates the data of a pet assigned to a tutor.",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "The pet's ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tutorId",
            "in": "path",
            "description": "The pet's tutor ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Request body to update the pet's data. (ID not required.)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated."
          },
          "400": {
            "description": "Invalid or non-existent tutor or pet ID | Input fields were not provided."
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Delete a pet assigned to a tutor.",
        "description": "This endpoint deletes the data of a pet assigned to a tutor.",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "The pet's ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tutorId",
            "in": "path",
            "description": "The pet's tutor ID provided as a URI parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted."
          },
          "400": {
            "description": "Tutor or pet not found or does not exist."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Tutors": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "phone": {
            "type": "string",
            "example": "+55 (62) 98416-0323"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "jhondoe@email.com"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time",
            "example": "1993-12-12 10:10"
          },
          "pets": {
            "$ref": "#/components/schemas/Pet"
          }
        },
        "xml": {
          "name": "tutors"
        }
      },
      "Tutor": {
        "type": "object",
        "required": [
          "name",
          "phone",
          "email",
          "date_of_birth",
          "zip_code"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Santino Corleone"
          },
          "phone": {
            "type": "string",
            "example": "+1 532232123"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "santinocorleone@godfather.com"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time",
            "example": "1990-12-10 00:12"
          },
          "zip_code": {
            "type": "string",
            "example": "988323"
          }
        },
        "xml": {
          "name": "tutor"
        }
      },
      "Pet": {
        "type": "object",
        "required": [
          "name",
          "species",
          "carry",
          "weight",
          "date_of_birth"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Lilo"
          },
          "species": {
            "type": "string",
            "example": "Dog"
          },
          "carry": {
            "type": "string",
            "example": "p"
          },
          "weight": {
            "type": "number",
            "example": 5
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time",
            "example": "1993-12-12 10:10"
          }
        }
      }
    },
    "requestBodies": {
      "Tutor": {
        "description": "Tutor object required to insert a tutor into the server.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Tutor"
            }
          }
        }
      },
      "Pet": {
        "description": "Pet object required to insert a pet into the server.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      }
    }
  }
}
